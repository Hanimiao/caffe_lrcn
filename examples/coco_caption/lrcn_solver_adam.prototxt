net: "./examples/coco_caption/lrcn.prototxt"

# lrcn.prototxt supports three variants of the LRCN architecture:
# (1) stage: 'factored' stage: '2-layer'
# (2) stage: 'unfactored' stage: '1-layer'
# (3) stage: 'unfactored' stage: '2-layer'
# This solver uses variant (1).
# To use a different variant, modify the states (train_state, test_state)
# below as appropriate:

train_state: { stage: 'freeze-convnet' stage: 'factored' stage: '2-layer' }
test_iter: 25
test_state: { stage: 'freeze-convnet' stage: 'factored' stage: '2-layer' stage: 'test-on-train' }
test_iter: 25
test_state: { stage: 'freeze-convnet' stage: 'factored' stage: '2-layer' stage: 'test-on-val' }
test_interval: 1000
base_lr: 0.001
momentum: 0.9
momentum2: 0.999
lr_policy: "fixed"
#gamma: 0.5
#stepsize: 20000
display: 100
max_iter: 110000
#momentum: 0.9
weight_decay: 0.0000
snapshot: 5000
snapshot_prefix: "./examples/coco_caption/lrcn_adam"
solver_mode: GPU
random_seed: 1701
average_loss: 100
clip_gradients: 10
